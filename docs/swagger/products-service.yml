openapi: 3.0.3
info:
  title: 'Products service: API with AWS API Gateway and AWS Lambda'
  version: 0.0.1
servers:
  - url: https://dvwtr13aob.execute-api.eu-west-1.amazonaws.com
    description: Dev stage AWS Products API Gateway
paths:
  /products:
    get:
      summary: Returns list of available products
      tags:
        - Products
      operationId: getProductsList
      responses:
        '200':
          description: Available products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        'default':
          description: Non standard response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a product
      tags:
        - Products
      operationId: createProduct
      requestBody:
        description: The product creation request payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Success product creation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: successfully created
                  href:
                    type: string
                    description: The URI to new create resource
                    example: /products/77
        404:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid Request Data
        'default':
          description: Non standard response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a product
      tags:
        - Products
      operationId: updateProduct
      requestBody:
        description: The product update request payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Success product update response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: successfully created
                  href:
                    type: string
                    description: The URI to updated resource
                    example: /products/77

        'default':
          description: Non standard response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{productId}:
    get:
      summary: Returns product by provided id
      tags:
        - Products
      operationId: getProductsById
      parameters:
        - name: productId
          in: path
          required: true
          description: The unique identifier of product
          example: '7567ec4b-b10c-48c5-9345-fc73c48a80aa'
          schema:
            type: string
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        'default':
          description: Non standard response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete product by provided id
      tags:
        - Products
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          required: true
          description: The unique identifier of product to remove
          example: '7567ec4b-b10c-48c5-9345-fc73c48a80aa'
          schema:
            type: string
      responses:
        '204':
          description: No Content
        'default':
          description: Non standard response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      required:
        - title
        - price
        - description
        - count
      properties:
        id:
          type: string
          example: 7567ec4b-b10c-48c5-9345-fc73c48a80aa
        title:
          type: string
          example: Pet Dog Cat Food
        description:
          type: string
          example: Pet Dog Cat Food Bowl with Bottle Automatic Drinking Feeder
        price:
          type: number
          example: 9.99
        count:
          type: integer
          example: 18
    Products:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 'Internal server error'
